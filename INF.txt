warehouse_db - db name
warehouse_dbEntities - Appconfig
Entity 5
4.7.2


Обозначения N:M, 1:N и 1:1 используются в базах данных для описания типов связей между таблицами. Эти термины помогают понять, как данные в одной таблице связаны с данными в другой. Я объясню каждое из них простыми словами и с примерами, чтобы всё стало ясно.
1. N:M (многие ко многим)

    Что это значит: Связь N:M означает, что несколько записей в одной таблице могут быть связаны с несколькими записями в другой таблице.
    Пример: Представьте, что у вас есть таблицы Менеджеры и Партнеры. Один менеджер может работать с несколькими партнерами, и один партнер может обслуживаться несколькими менеджерами. Это и есть N:M.
    Как это работает в базе: Чтобы связать такие таблицы, создаётся промежуточная таблица (например, Managers_Partners). В ней хранятся пары ключей, например, ManagerID и PartnerID, которые показывают, кто с кем связан.

2. 1:N (один ко многим)

    Что это значит: Связь 1:N означает, что одна запись в одной таблице может быть связана с несколькими записями в другой таблице, но каждая запись во второй таблице связана только с одной записью в первой.
    Пример: Возьмём таблицы Партнеры и Заявки. Один партнер может иметь много заявок, но каждая заявка принадлежит только одному партнеру. Это 1:N.
    Как это работает в базе: В таблице Заявки добавляется столбец (например, PartnerID), который ссылается на конкретного партнера из таблицы Партнеры.

3. 1:1 (один к одному)

    Что это значит: Связь 1:1 означает, что одна запись в одной таблице связана ровно с одной записью в другой таблице.
    Пример: Допустим, есть таблицы Сотрудники и Доступ. У каждого сотрудника есть только одна карта доступа, и каждая карта принадлежит только одному сотруднику. Это 1:1.
    Как это работает в базе: В одной из таблиц (например, Доступ) добавляется столбец (например, EmployeeID), который ссылается на сотрудника из таблицы Сотрудники. Этот столбец должен быть уникальным, чтобы связь оставалась один к одному.

Зачем это нужно?

Эти обозначения помогают:

    Понять, как организованы данные в базе.
    Правильно спроектировать таблицы и связи между ними.
    Избежать путаницы или лишних данных.

Примеры для наглядности

    N:M: Один менеджер работает с несколькими партнерами, и один партнер может работать с несколькими менеджерами.
    1:N: Один партнер подаёт много заявок, но каждая заявка — только от одного партнера.
    1:1: У одного сотрудника — одна карта доступа, и наоборот.


Партнеры (Partners) --(1:N)-- Заявки (Orders)
Менеджеры (Managers) --(N:M)-- Партнеры (Partners)
Менеджеры (Managers) --(1:N)-- Заявки (Orders)
Сотрудники (Employees) --(1:N)-- Кадры (HR)
Сотрудники (Employees) --(1:1)-- Доступ (Access)
Материалы (Materials) --(N:M)-- Поставщики (Suppliers)
Материалы (Materials) --(1:N)-- Склад (Warehouse)
Продукция (Products) --(N:M)-- Материалы (Materials)
Продукция (Products) --(N:M)-- Заявки (Orders)
Склад (Warehouse) --(1:N)-- Продукция (Products)



В базе данных, созданной для управления материалами на складе, используются следующие связи между таблицами:

1. **Связь между `material_types` и `materials`**:  
   - **Тип связи**: "один ко многим" (1:N).  
   - **Описание**: Каждый тип материала (например, "Дерево", "Текстиль") может быть связан с несколькими материалами (например, "Цельный массив дерева Дуб 1000х600 мм", "Клееный массив дерева Дуб 1000х600 мм"), но каждый материал относится только к одному типу.  
   - **Реализация**: В таблице `materials` есть внешний ключ `material_type_id`, который ссылается на первичный ключ `material_type_id` в таблице `material_types`.

2. **Связь между `product_types` и `products`**:  
   - **Тип связи**: "один ко многим" (1:N).  
   - **Описание**: Каждый тип продукции (например, "Кресла", "Столы") может быть связан с несколькими продуктами (например, "Кресло детское цвет Белый и Розовый", "Стол компьютерный 700х600х500 мм"), но каждая продукция относится только к одному типу.  
   - **Реализация**: В таблице `products` есть внешний ключ `product_type_id`, который ссылается на первичный ключ `product_type_id` в таблице `product_types`.

3. **Связь между `materials` и `products` через `material_products`**:  
   - **Тип связи**: "многие ко многим" (N:M).  
   - **Описание**: Один материал может использоваться в нескольких продуктах, и одна продукция может использовать несколько материалов. Для реализации этой связи используется связующая таблица `material_products`, которая содержит информацию о том, сколько конкретного материала требуется для производства конкретной продукции.  
   - **Реализация**: Таблица `material_products` имеет составной первичный ключ (`material_id`, `product_id`), где `material_id` ссылается на `materials.material_id`, а `product_id` ссылается на `products.product_id`.

Эти связи обеспечивают целостность данных и позволяют эффективно управлять информацией о материалах, их типах, продукции и взаимосвязях между ними в системе складского учёта.

Если коротко:

    N:M — много к много (нужна промежуточная таблица).
    1:N — один к многим (связь через ключ).
    1:1 — один к одному (строгая пара).